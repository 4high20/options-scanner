{"version":3,"sources":["services/reconnecting-websocket.js","store/websocket.js","components/Websocket.js","styles/themes.js","services/deribit.js","services/deribit-utils.js","store/instruments.js","store/tickers.js","components/OptionsScanner.js","containers/OptionsScanner.js","App.js","store/store.js","serviceWorker.js","index.js"],"names":["define","window","ReconnectingWebSocket","prototype","onopen","event","onclose","onconnecting","onmessage","onerror","debugAll","CONNECTING","WebSocket","OPEN","CLOSING","CLOSED","url","protocols","options","settings","debug","automaticOpen","reconnectInterval","maxReconnectInterval","reconnectDecay","timeoutInterval","maxReconnectAttempts","binaryType","key","this","reconnectAttempts","readyState","protocol","ws","self","forcedClose","timedOut","eventTarget","document","createElement","generateEvent","s","args","evt","createEvent","initCustomEvent","addEventListener","bind","removeEventListener","dispatchEvent","open","reconnectAttempt","console","localWs","timeout","setTimeout","close","clearTimeout","e","isReconnect","code","reason","wasClean","Math","pow","data","send","refresh","slice","createSlice","name","initialState","isOpen","reducers","state","payload","actions","dispatch","selectors","websocket","Websocket","useSelector","style","backgroundColor","borderRadius","marginRight","display","height","width","marginLeft","marginBottom","base","palette","primary","main","secondary","success","error","overrides","MuiPaper","root","padding","props","square","typography","htmlFontSize","fontFamily","join","h1","fontSize","h2","h3","h4","h5","h6","themes","type","mapValues","theme","merge","socket","ReconnectingWebsocket","CustomEvent","transformReply","r","isPlainObject","reduce","result","value","camelCase","isArray","map","x","JSON","parse","reconnect","timer","interval","allowance","resetTimer","warn","stringify","method","params","max","parseInt","jsonrpc","id","Date","now","message","manageSession","subscriptions","channels","Object","keys","channel","log","instruments","clear","currency","request","Promise","resolve","reject","Error","callback","once","call","kind","expired","then","orderBy","keyBy","tickers","update","instrumentName","MinMaxFilter","valueChanged","that","setState","target","parentFilterInstance","instance","min","setModel","filterType","filter","filterTo","parentModel","margin","alignItems","className","placeholder","onChange","React","Component","OptionsScanner","columnDefs","field","headerName","comparator","valueA","valueB","match","expireA","strikeA","typeA","expireB","strikeB","typeB","getTime","parseFloat","localeCompare","valueFormatter","underlyingPrice","toFixed","assign","floatingFilterComponent","floatingFilterComponentParams","suppressFilterButton","rowData","values","isDarkTheme","useTheme","onGridReady","api","sizeColumnsToFit","floatingFilter","defaultColDef","resizable","sortable","deltaRowDataMode","getRowNodeId","frameworkComponents","customNumberMinMaxFilter","useDispatch","useEffect","channelArg","handler","castArray","forEach","i","subscriptionAdd","d","subscriptionRemove","App","useState","setTheme","network","setCurrency","createMuiTheme","THEME_DARK","THEME_LIGHT","CssBaseline","AppBar","position","Toolbar","variant","Grid","container","justify","item","xs","sm","Typography","Select","c","MenuItem","Tooltip","title","IconButton","onClick","aria-label","href","rel","configureStore","middleware","getDefaultMiddleware","thunk","immutableCheck","serializableCheck","reducer","Boolean","location","hostname","ReactDOM","render","StrictMode","store","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.013748d3.chunk.js","sourcesContent":["/* eslint-disable */\n// https://raw.githubusercontent.com/joewalnes/reconnecting-websocket/master/reconnecting-websocket.js\n// MIT License:\n//\n// Copyright (c) 2010-2012, Joe Walnes\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/**\n * This behaves like a WebSocket in every way, except if it fails to connect,\n * or it gets disconnected, it will repeatedly poll until it successfully connects\n * again.\n *\n * It is API compatible, so when you have:\n *   ws = new WebSocket('ws://....');\n * you can replace with:\n *   ws = new ReconnectingWebSocket('ws://....');\n *\n * The event stream will typically look like:\n *  onconnecting\n *  onopen\n *  onmessage\n *  onmessage\n *  onclose // lost connection\n *  onconnecting\n *  onopen  // sometime later...\n *  onmessage\n *  onmessage\n *  etc...\n *\n * It is API compatible with the standard WebSocket API, apart from the following members:\n *\n * - `bufferedAmount`\n * - `extensions`\n * - `binaryType`\n *\n * Latest version: https://github.com/joewalnes/reconnecting-websocket/\n * - Joe Walnes\n *\n * Syntax\n * ======\n * var socket = new ReconnectingWebSocket(url, protocols, options);\n *\n * Parameters\n * ==========\n * url - The url you are connecting to.\n * protocols - Optional string or array of protocols.\n * options - See below\n *\n * Options\n * =======\n * Options can either be passed upon instantiation or set after instantiation:\n *\n * var socket = new ReconnectingWebSocket(url, null, { debug: true, reconnectInterval: 4000 });\n *\n * or\n *\n * var socket = new ReconnectingWebSocket(url);\n * socket.debug = true;\n * socket.reconnectInterval = 4000;\n *\n * debug\n * - Whether this instance should log debug messages. Accepts true or false. Default: false.\n *\n * automaticOpen\n * - Whether or not the websocket should attempt to connect immediately upon instantiation. The socket can be manually opened or closed at any time using ws.open() and ws.close().\n *\n * reconnectInterval\n * - The number of milliseconds to delay before attempting to reconnect. Accepts integer. Default: 1000.\n *\n * maxReconnectInterval\n * - The maximum number of milliseconds to delay a reconnection attempt. Accepts integer. Default: 30000.\n *\n * reconnectDecay\n * - The rate of increase of the reconnect delay. Allows reconnect attempts to back off when problems persist. Accepts integer or float. Default: 1.5.\n *\n * timeoutInterval\n * - The maximum time in milliseconds to wait for a connection to succeed before closing and retrying. Accepts integer. Default: 2000.\n *\n */\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof module !== \"undefined\" && module.exports) {\n    module.exports = factory();\n  } else {\n    global.ReconnectingWebSocket = factory();\n  }\n})(this, function () {\n  if (!(\"WebSocket\" in window)) {\n    return;\n  }\n\n  function ReconnectingWebSocket(url, protocols, options) {\n    // Default settings\n    var settings = {\n      /** Whether this instance should log debug messages. */\n      debug: false,\n\n      /** Whether or not the websocket should attempt to connect immediately upon instantiation. */\n      automaticOpen: true,\n\n      /** The number of milliseconds to delay before attempting to reconnect. */\n      reconnectInterval: 1000,\n      /** The maximum number of milliseconds to delay a reconnection attempt. */\n      maxReconnectInterval: 30000,\n      /** The rate of increase of the reconnect delay. Allows reconnect attempts to back off when problems persist. */\n      reconnectDecay: 1.5,\n\n      /** The maximum time in milliseconds to wait for a connection to succeed before closing and retrying. */\n      timeoutInterval: 2000,\n\n      /** The maximum number of reconnection attempts to make. Unlimited if null. */\n      maxReconnectAttempts: null,\n\n      /** The binary type, possible values 'blob' or 'arraybuffer', default 'blob'. */\n      binaryType: \"blob\",\n    };\n    if (!options) {\n      options = {};\n    }\n\n    // Overwrite and define settings with options if they exist.\n    for (var key in settings) {\n      if (typeof options[key] !== \"undefined\") {\n        this[key] = options[key];\n      } else {\n        this[key] = settings[key];\n      }\n    }\n\n    // These should be treated as read-only properties\n\n    /** The URL as resolved by the constructor. This is always an absolute URL. Read only. */\n    this.url = url;\n\n    /** The number of attempted reconnects since starting, or the last successful connection. Read only. */\n    this.reconnectAttempts = 0;\n\n    /**\n     * The current state of the connection.\n     * Can be one of: WebSocket.CONNECTING, WebSocket.OPEN, WebSocket.CLOSING, WebSocket.CLOSED\n     * Read only.\n     */\n    this.readyState = WebSocket.CONNECTING;\n\n    /**\n     * A string indicating the name of the sub-protocol the server selected; this will be one of\n     * the strings specified in the protocols parameter when creating the WebSocket object.\n     * Read only.\n     */\n    this.protocol = null;\n\n    // Private state variables\n\n    var self = this;\n    var ws;\n    var forcedClose = false;\n    var timedOut = false;\n    var eventTarget = document.createElement(\"div\");\n\n    // Wire up \"on*\" properties as event handlers\n\n    eventTarget.addEventListener(\"open\", function (event) {\n      self.onopen(event);\n    });\n    eventTarget.addEventListener(\"close\", function (event) {\n      self.onclose(event);\n    });\n    eventTarget.addEventListener(\"connecting\", function (event) {\n      self.onconnecting(event);\n    });\n    eventTarget.addEventListener(\"message\", function (event) {\n      self.onmessage(event);\n    });\n    eventTarget.addEventListener(\"error\", function (event) {\n      self.onerror(event);\n    });\n\n    // Expose the API required by EventTarget\n\n    this.addEventListener = eventTarget.addEventListener.bind(eventTarget);\n    this.removeEventListener = eventTarget.removeEventListener.bind(\n      eventTarget\n    );\n    this.dispatchEvent = eventTarget.dispatchEvent.bind(eventTarget);\n\n    /**\n     * This function generates an event that is compatible with standard\n     * compliant browsers and IE9 - IE11\n     *\n     * This will prevent the error:\n     * Object doesn't support this action\n     *\n     * http://stackoverflow.com/questions/19345392/why-arent-my-parameters-getting-passed-through-to-a-dispatched-event/19345563#19345563\n     * @param s String The name that the event should use\n     * @param args Object an optional object that the event will use\n     */\n    function generateEvent(s, args) {\n      var evt = document.createEvent(\"CustomEvent\");\n      evt.initCustomEvent(s, false, false, args);\n      return evt;\n    }\n\n    this.open = function (reconnectAttempt) {\n      ws = new WebSocket(self.url, protocols || []);\n      ws.binaryType = this.binaryType;\n\n      if (reconnectAttempt) {\n        if (\n          this.maxReconnectAttempts &&\n          this.reconnectAttempts > this.maxReconnectAttempts\n        ) {\n          return;\n        }\n      } else {\n        eventTarget.dispatchEvent(generateEvent(\"connecting\"));\n        this.reconnectAttempts = 0;\n      }\n\n      if (self.debug || ReconnectingWebSocket.debugAll) {\n        console.debug(\"ReconnectingWebSocket\", \"attempt-connect\", self.url);\n      }\n\n      var localWs = ws;\n      var timeout = setTimeout(function () {\n        if (self.debug || ReconnectingWebSocket.debugAll) {\n          console.debug(\n            \"ReconnectingWebSocket\",\n            \"connection-timeout\",\n            self.url\n          );\n        }\n        timedOut = true;\n        localWs.close();\n        timedOut = false;\n      }, self.timeoutInterval);\n\n      ws.onopen = function (event) {\n        clearTimeout(timeout);\n        if (self.debug || ReconnectingWebSocket.debugAll) {\n          console.debug(\"ReconnectingWebSocket\", \"onopen\", self.url);\n        }\n        self.protocol = ws.protocol;\n        self.readyState = WebSocket.OPEN;\n        self.reconnectAttempts = 0;\n        var e = generateEvent(\"open\");\n        e.isReconnect = reconnectAttempt;\n        reconnectAttempt = false;\n        eventTarget.dispatchEvent(e);\n      };\n\n      ws.onclose = function (event) {\n        clearTimeout(timeout);\n        ws = null;\n        if (forcedClose) {\n          self.readyState = WebSocket.CLOSED;\n          eventTarget.dispatchEvent(generateEvent(\"close\"));\n        } else {\n          self.readyState = WebSocket.CONNECTING;\n          var e = generateEvent(\"connecting\");\n          e.code = event.code;\n          e.reason = event.reason;\n          e.wasClean = event.wasClean;\n          eventTarget.dispatchEvent(e);\n          if (!reconnectAttempt && !timedOut) {\n            if (self.debug || ReconnectingWebSocket.debugAll) {\n              console.debug(\"ReconnectingWebSocket\", \"onclose\", self.url);\n            }\n            eventTarget.dispatchEvent(generateEvent(\"close\"));\n          }\n\n          var timeout =\n            self.reconnectInterval *\n            Math.pow(self.reconnectDecay, self.reconnectAttempts);\n          setTimeout(\n            function () {\n              self.reconnectAttempts++;\n              self.open(true);\n            },\n            timeout > self.maxReconnectInterval\n              ? self.maxReconnectInterval\n              : timeout\n          );\n        }\n      };\n      ws.onmessage = function (event) {\n        if (self.debug || ReconnectingWebSocket.debugAll) {\n          console.debug(\n            \"ReconnectingWebSocket\",\n            \"onmessage\",\n            self.url,\n            event.data\n          );\n        }\n        var e = generateEvent(\"message\");\n        e.data = event.data;\n        eventTarget.dispatchEvent(e);\n      };\n      ws.onerror = function (event) {\n        if (self.debug || ReconnectingWebSocket.debugAll) {\n          console.debug(\"ReconnectingWebSocket\", \"onerror\", self.url, event);\n        }\n        eventTarget.dispatchEvent(generateEvent(\"error\"));\n      };\n    };\n\n    // Whether or not to create a websocket upon instantiation\n    if (this.automaticOpen == true) {\n      this.open(false);\n    }\n\n    /**\n     * Transmits data to the server over the WebSocket connection.\n     *\n     * @param data a text string, ArrayBuffer or Blob to send to the server.\n     */\n    this.send = function (data) {\n      if (ws) {\n        if (self.debug || ReconnectingWebSocket.debugAll) {\n          console.debug(\"ReconnectingWebSocket\", \"send\", self.url, data);\n        }\n        return ws.send(data);\n      } else {\n        throw \"INVALID_STATE_ERR : Pausing to reconnect websocket\";\n      }\n    };\n\n    /**\n     * Closes the WebSocket connection or connection attempt, if any.\n     * If the connection is already CLOSED, this method does nothing.\n     */\n    this.close = function (code, reason) {\n      // Default CLOSE_NORMAL code\n      if (typeof code == \"undefined\") {\n        code = 1000;\n      }\n      forcedClose = true;\n      if (ws) {\n        ws.close(code, reason);\n      }\n    };\n\n    /**\n     * Additional public API method to refresh the connection if still open (close, re-open).\n     * For example, if the app suspects bad data / missed heart beats, it can try to refresh.\n     */\n    this.refresh = function () {\n      if (ws) {\n        ws.close();\n      }\n    };\n  }\n\n  /**\n   * An event listener to be called when the WebSocket connection's readyState changes to OPEN;\n   * this indicates that the connection is ready to send and receive data.\n   */\n  ReconnectingWebSocket.prototype.onopen = function (event) {\n  };\n  /** An event listener to be called when the WebSocket connection's readyState changes to CLOSED. */\n  ReconnectingWebSocket.prototype.onclose = function (event) {\n  };\n  /** An event listener to be called when a connection begins being attempted. */\n  ReconnectingWebSocket.prototype.onconnecting = function (event) {\n  };\n  /** An event listener to be called when a message is received from the server. */\n  ReconnectingWebSocket.prototype.onmessage = function (event) {\n  };\n  /** An event listener to be called when an error occurs. */\n  ReconnectingWebSocket.prototype.onerror = function (event) {\n  };\n\n  /**\n   * Whether all instances of ReconnectingWebSocket should log debug messages.\n   * Setting this to true is the equivalent of setting all instances of ReconnectingWebSocket.debug to true.\n   */\n  ReconnectingWebSocket.debugAll = false;\n\n  ReconnectingWebSocket.CONNECTING = WebSocket.CONNECTING;\n  ReconnectingWebSocket.OPEN = WebSocket.OPEN;\n  ReconnectingWebSocket.CLOSING = WebSocket.CLOSING;\n  ReconnectingWebSocket.CLOSED = WebSocket.CLOSED;\n\n  return ReconnectingWebSocket;\n});\n","import {createSlice} from \"@reduxjs/toolkit\";\n\nconst slice = createSlice({\n  name: \"websocket\",\n  initialState: {\n    isOpen: false,\n    url: null,\n  },\n  reducers: {\n    open: (state, {payload}) => {\n      state.isOpen = true;\n      state.url = payload.url;\n    },\n    close: (state) => {\n      state.isOpen = false;\n      state.url = null;\n    },\n  },\n});\n\n// export const actions = slice.actions;\n\nexport const actions = {\n  open: (url) => (dispatch) => {\n    dispatch(slice.actions.open({url}));\n  },\n  close: () => (dispatch) => {\n    dispatch(slice.actions.close());\n  },\n};\n\nexport const selectors = {\n  isOpen: (state) => state.websocket.isOpen,\n};\n\nexport default slice.reducer;\n","import React from \"react\";\nimport {useSelector} from \"react-redux\";\n\nimport {selectors} from \"../store/websocket\";\n\nexport function Websocket() {\n  const isOpen = useSelector(selectors.isOpen);\n  const style = {\n    backgroundColor: isOpen ? \"#7aae1a\" : \"#ff1111\",\n    borderRadius: \"50%\",\n    marginRight: \"8px\",\n    display: \"inline-block\",\n    height: \"12px\",\n    width: \"12px\",\n  };\n\n  return (\n    <div style={{marginLeft: \"4px\", marginBottom: \"4px\"}}>\n      <span style={style}/>\n      {isOpen ? \"Online\" : \"Connecting...\"}\n    </div>\n  );\n}\n","import mapValues from \"lodash/mapValues\";\r\nimport merge from \"lodash/merge\";\r\n\r\nconst base = {\r\n  palette: {\r\n    primary: {\r\n      main: \"#fe9526\",\r\n    },\r\n    secondary: {\r\n      main: \"#ffcc30\",\r\n    },\r\n    success: {\r\n      main: \"#53d86a\",\r\n    },\r\n    error: {\r\n      main: \"#fd3d39\",\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiPaper: {\r\n      root: {\r\n        borderRadius: \"1px\",\r\n        padding: \"8px\",\r\n      },\r\n    },\r\n  },\r\n  props: {\r\n    MuiPaper: {\r\n      // elevation: 0,\r\n      square: true,\r\n    },\r\n  },\r\n  typography: {\r\n    htmlFontSize: 14,\r\n    fontFamily: [\"Open Sans\", \"Arial\", \"sans-serif\"].join(\",\"),\r\n    h1: {\r\n      fontSize: \"2.986rem\",\r\n    },\r\n    h2: {\r\n      fontSize: \"2.488rem\",\r\n    },\r\n    h3: {\r\n      fontSize: \"2.074rem\",\r\n    },\r\n    h4: {\r\n      fontSize: \"1.728rem\",\r\n    },\r\n    h5: {\r\n      fontSize: \"1.44rem\",\r\n    },\r\n    h6: {\r\n      fontSize: \"1.2rem\",\r\n    },\r\n  },\r\n};\r\n\r\nconst themes = {};\r\n\r\nthemes.THEME_LIGHT = {\r\n  palette: {\r\n    type: \"light\",\r\n  },\r\n};\r\n\r\nthemes.THEME_DARK = {\r\n  palette: {\r\n    type: \"dark\",\r\n    // background: {\r\n    //   default: \"#0d1c2e\",\r\n    //   paper: \"#162a3f\",\r\n    // },\r\n  },\r\n};\r\n\r\nexport default mapValues(themes, (theme) => merge(theme, base));\r\n","import castArray from \"lodash/castArray\";\nimport isArray from \"lodash/isArray\";\nimport ReconnectingWebsocket from \"./reconnecting-websocket\";\nimport {manageSession, transformReply} from \"./deribit-utils\";\n\nconst url =\n  process.env.NODE_ENV === \"production\"\n    ? \"wss://www.deribit.com/ws/api/v2\"\n    : \"wss://test.deribit.com/ws/api/v2\";\n\nconst socket = new ReconnectingWebsocket(url, null, {\n  // automaticOpen: false,\n});\n\nsocket.addEventListener(\"message\", (event) => {\n  const e = new CustomEvent(\"json\");\n  e.data = transformReply(JSON.parse(event.data));\n  socket.dispatchEvent(e);\n});\n\nmanageSession(socket, socket.refresh);\n\n// Manage subscriptions\n// Key is the channel, value is function handler\nconst subscriptions = {};\nsocket.addEventListener(\"open\", (event) => {\n  socket.send(\n    JSON.stringify({\n      method: \"public/subscribe\",\n      params: {\n        channels: Object.keys(subscriptions),\n      },\n      jsonrpc: \"2.0\",\n      id: Date.now(),\n    })\n  );\n});\n\nsocket.addEventListener(\"json\", (event) => {\n  const message = event.data;\n  if (message.method === \"subscription\") {\n    const {channel, data} = message.params;\n    if (subscriptions[channel]) {\n      subscriptions[channel](data);\n    } else {\n      console.log(\"Ignoring subscription: \", channel);\n    }\n  }\n});\n\nexport const subscriptionAdd = (channelArg, handler) => {\n  const channels = castArray(channelArg);\n  channels.forEach((channel, i) => {\n    subscriptions[channel] = isArray(handler) ? handler[i] : handler;\n  });\n\n  const payload = JSON.stringify({\n    method: \"public/subscribe\",\n    params: {\n      channels,\n    },\n    jsonrpc: \"2.0\",\n    id: Date.now(),\n  });\n\n  // If connection is open send, otherwise wait for connection to open;\n  if (socket.readyState === 1) {\n    socket.send(payload);\n  } else {\n    // Connection opened\n    socket.addEventListener(\"open\", () => socket.send(payload), {\n      once: true,\n    });\n  }\n};\n\nexport const subscriptionRemove = (channelArg) => {\n  const channels = castArray(channelArg);\n  channels.forEach((channel) => {\n    delete channels[channel];\n  });\n  const payload = JSON.stringify({\n    method: \"public/unsubscribe\",\n    params: {\n      channels,\n    },\n    jsonrpc: \"2.0\",\n    id: Date.now(),\n  });\n\n  // If connection is open send, otherwise wait for connection to open;\n  if (socket.readyState === 1) {\n    socket.send(payload);\n  } else {\n    // Connection opened\n    socket.addEventListener(\"open\", () => socket.send(payload), {\n      once: true,\n    });\n  }\n};\n\n// Function to make a rpc call over ws. Will resolve with response\nexport const call = (request, {timeout = 10000} = {}) =>\n  new Promise((resolve, reject) => {\n    const timer = setTimeout(reject, timeout, new Error(\"Call timed out\"));\n\n    const id = Date.now();\n    const payload = JSON.stringify({\n      method: request.method,\n      params: request.params,\n      jsonrpc: \"2.0\",\n      id,\n    });\n\n    function callback(event) {\n      const message = event.data;\n      if (message.id === id) {\n        socket.removeEventListener(\"message\", callback);\n        clearTimeout(timer);\n        return resolve(message);\n      }\n    }\n\n    socket.addEventListener(\"json\", callback);\n\n    // If connection is open send, otherwise wait for connection to open;\n    if (socket.readyState === 1) {\n      socket.send(payload);\n    } else {\n      // Connection opened\n      socket.addEventListener(\"open\", () => socket.send(payload), {\n        once: true,\n      });\n    }\n  });\n","import camelCase from \"lodash/camelCase\";\nimport isArray from \"lodash/isArray\";\nimport isPlainObject from \"lodash/isPlainObject\";\nimport reduce from \"lodash/reduce\";\n\n// Recursively transform all keys to camelcase\nexport const transformReply = (r) => {\n  if (isPlainObject(r)) {\n    return reduce(\n      r,\n      (result, value, key) => {\n        result[camelCase(key)] = transformReply(value);\n        return result;\n      },\n      {}\n    );\n  }\n\n  // If its a array, transform each element\n  if (isArray(r)) {\n    return r.map((x) => transformReply(x));\n  }\n\n  // Just return base type\n  return r;\n};\n\n// Manages Deribit websocket and reconnects if stale\nexport const manageSession = (ws, reconnect = () => {\n}) => {\n  // Set a timer, if no messages received within interval, refresh connection\n  let timer = null;\n  const interval = 10 * 1000;\n  const allowance = 2000; // Allowance for network\n\n  const resetTimer = () => {\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      console.warn(\n        `Connection is stale, no message received in ${interval / 1000} seconds`\n      );\n      return reconnect();\n    }, interval + allowance);\n  };\n\n  // Once connection opens, start requesting heartbeats\n  ws.addEventListener(\"open\", () => {\n    ws.send(\n      JSON.stringify({\n        method: \"public/set_heartbeat\",\n        params: {\n          // Seconds (min is 10s)\n          interval: Math.max(parseInt(interval / 1000, 10), 10),\n        },\n        jsonrpc: \"2.0\",\n        id: Date.now(),\n      })\n    );\n  });\n\n  // When connection closes, remove my timer\n  ws.addEventListener(\"close\", () => {\n    clearTimeout(timer);\n  });\n\n  // Listen for messages\n  ws.addEventListener(\"json\", function (event) {\n    // Reset timer on new message\n    resetTimer();\n\n    // I must respond to test_request messages to keep connection alive\n    const message = event.data;\n    if (\n      message.method === \"heartbeat\" &&\n      message.params.type === \"test_request\"\n    ) {\n      ws.send(\n        JSON.stringify({\n          method: \"public/test\",\n          params: {},\n          jsonrpc: \"2.0\",\n          id: Date.now(),\n        })\n      );\n    }\n  });\n};\n","import orderBy from \"lodash/orderBy\";\nimport keyBy from \"lodash/keyBy\";\nimport {createSlice} from \"@reduxjs/toolkit\";\nimport {call} from \"../services/deribit\";\n\n// Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n// doesn't actually mutate the state because it uses the Immer library,\n// which detects changes to a \"draft state\" and produces a brand new\n// immutable state based off those changes\nconst slice = createSlice({\n  name: \"instruments\",\n  initialState: {\n    instruments: {},\n  },\n  reducers: {\n    success: (state, {payload}) => {\n      state.instruments = payload;\n    },\n    clear: (state) => {\n      state.instruments = {};\n    },\n  },\n});\n\nexport const actions = {\n  request: (currency) => (dispatch) => {\n    dispatch(slice.actions.clear());\n\n    return call({\n      method: \"public/get_instruments\",\n      params: {\n        currency,\n        kind: \"option\",\n        expired: false,\n      },\n    })\n      .then((r) => r.result)\n      .then((r) =>\n        orderBy(\n          r,\n          [\"expirationTimestamp\", \"strike\", \"optionType\"],\n          [\"asc\", \"asc\", \"asc\"]\n        )\n      )\n      .then((r) => keyBy(r, \"instrumentName\"))\n      .then((r) => dispatch(slice.actions.success(r)));\n  },\n};\n\nexport const selectors = {\n  instrument: (state) => state.instruments.instruments,\n  options: (state) => state.instruments.instruments,\n};\n\nexport default slice.reducer;\n","import {createSlice} from \"@reduxjs/toolkit\";\n// import {call} from \"../services/deribit\";\n\n// Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n// doesn't actually mutate the state because it uses the Immer library,\n// which detects changes to a \"draft state\" and produces a brand new\n// immutable state based off those changes\nconst slice = createSlice({\n  name: \"tickers\",\n  initialState: {\n    tickers: {},\n  },\n  reducers: {\n    update: (state, {payload}) => {\n      state.tickers[payload.instrumentName] = payload;\n    },\n    clear: (state) => {\n      state.tickers = {};\n    },\n  },\n});\n\nexport const actions = slice.actions;\n\nexport const tickerSelectorFactory = (ticker) => (state) =>\n  state.tickers.tickers[ticker] || {};\n\nexport const selectors = {\n  tickers: (state) => Object.values(state.tickers.tickers),\n};\n\nexport default slice.reducer;\n","import React from \"react\";\nimport map from \"lodash/map\";\nimport {AgGridReact} from \"ag-grid-react\";\n\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-balham-dark.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-balham.css\";\n// Override ag-grid theme\nimport \"./OptionsScanner.css\";\nimport useTheme from \"@material-ui/core/styles/useTheme\";\n\nexport class MinMaxFilter extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      min: \"\",\n      max: \"\",\n    };\n  }\n\n  valueChanged = (event) => {\n    const that = this;\n    this.setState(\n      {\n        [event.target.name]: event.target.value,\n      },\n      () => {\n        this.props.parentFilterInstance(function (instance) {\n          const {min, max} = that.state;\n          if (min && max) {\n            return instance.setModel({\n              filterType: \"number\",\n              type: \"inRange\",\n              filter: min,\n              filterTo: max,\n            });\n          }\n          if (min) {\n            return instance.setModel({\n              filterType: \"number\",\n              type: \"greaterThanOrEqual\",\n              filter: min,\n            });\n          }\n          if (max) {\n            return instance.setModel({\n              filterType: \"number\",\n              type: \"lessThanOrEqual\",\n              filter: max,\n            });\n          }\n          return instance.setModel(null);\n        });\n      }\n    );\n  };\n\n  onParentModelChanged(parentModel) {\n    switch (parentModel ? parentModel.type : null) {\n      case \"greaterThan\":\n      case \"greaterThanOrEqual\": {\n        return this.setState({\n          min: parentModel.filter,\n        });\n      }\n      case \"lessThan\":\n      case \"lessThanOrEqual\": {\n        return this.setState({\n          max: parentModel.filter,\n        });\n      }\n      case \"inRange\": {\n        return this.setState({\n          min: parentModel.filter,\n          max: parentModel.filterTo,\n        });\n      }\n      default: {\n        return this.setState({\n          min: \"\",\n          max: \"\",\n        });\n      }\n    }\n  }\n\n  render() {\n    const style = {\n      width: \"30%\",\n      margin: \"0 2px\",\n      padding: \"1px\",\n      display: \"flex\",\n      alignItems: \"center\",\n    };\n    return (\n      <>\n        <div style={{height: \"100%\"}} className=\"ag-floating-filter-input\">\n          <input\n            className=\"ag-input-field-input ag-text-field-input\"\n            style={style}\n            type=\"number\"\n            value={this.state.min}\n            name=\"min\"\n            placeholder=\"MIN\"\n            onChange={this.valueChanged}\n          />\n          <input\n            className=\"ag-input-field-input ag-text-field-input\"\n            style={style}\n            type=\"number\"\n            value={this.state.max}\n            name=\"max\"\n            placeholder=\"MAX\"\n            onChange={this.valueChanged}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nexport function OptionsScanner({options, instruments}) {\n  const columnDefs = [\n    {\n      field: \"instrumentName\",\n      headerName: \"Instrument\",\n      comparator: (valueA, valueB) => {\n        const [nameA, expireA, strikeA, typeA] = valueA.match(\n          /(\\d+[A-Z]{3}\\d\\d)-(\\d+)-([C|P])/\n        );\n        const [nameB, expireB, strikeB, typeB] = valueB.match(\n          /(\\d+[A-Z]{3}\\d\\d)-(\\d+)-([C|P])/\n        );\n\n        if (expireA !== expireB) {\n          return new Date(expireA).getTime() - new Date(expireB).getTime();\n        }\n\n        if (strikeA !== strikeB) {\n          return parseFloat(strikeA) - parseFloat(strikeB);\n        }\n\n        //https://stackoverflow.com/questions/51165/how-to-sort-strings-in-javascript\n        return typeA.localeCompare(typeB);\n      },\n    },\n    {\n      field: \"openInterest\",\n      filter: \"agNumberColumnFilter\",\n      headerName: \"Open Interest\",\n      type: \"numericColumn\",\n    },\n    {\n      field: \"markPrice\",\n      filter: \"agNumberColumnFilter\",\n      headerName: \"Mark Price\",\n      type: \"numericColumn\",\n      valueFormatter: (params) =>\n        `$${(params.value * params.data.underlyingPrice).toFixed(\n          2\n        )} (${params.value.toFixed(8)})`,\n    },\n    {\n      field: \"markIv\",\n      filter: \"agNumberColumnFilter\",\n      headerName: \"IV (Mark)\",\n      type: \"numericColumn\",\n      valueFormatter: (params) => `${params.value.toFixed(2)}`,\n    },\n    ...[\n      {headerName: \"Delta\", field: \"greeks.delta\"},\n      {headerName: \"Gamma\", field: \"greeks.gamma\"},\n      {headerName: \"Vega\", field: \"greeks.vega\"},\n      {headerName: \"Theta\", field: \"greeks.theta\"},\n    ].map((x) =>\n      Object.assign(x, {\n        filter: \"agNumberColumnFilter\",\n        floatingFilterComponent: \"customNumberMinMaxFilter\",\n        floatingFilterComponentParams: {suppressFilterButton: true},\n        type: \"numericColumn\",\n        valueFormatter: (params) => `${params.value.toFixed(5)}`,\n      })\n    ),\n  ];\n\n  // console.log('options: ', options) console.log('instruments: ', instruments)\n  const rowData = map(options, (values, instrumentName) => ({\n    ...values,\n    ...instruments[instrumentName],\n  }));\n\n  const onGridReady = (params) => {\n    // console.log(\"Grid Ready\", params);\n    params.api.sizeColumnsToFit();\n  };\n\n  const theme = useTheme();\n  const isDarkTheme = theme.palette.type === 'dark';\n  return (\n    <div id=\"grid-wrapper\">\n      <div\n        className={isDarkTheme ? \"ag-theme-balham-dark\" : \"ag-theme-balham\"}\n        style={{\n          height: \"95vh\",\n          width: \"100%\",\n        }}\n      >\n        <AgGridReact\n          onGridReady={onGridReady}\n          floatingFilter\n          columnDefs={columnDefs}\n          defaultColDef={{\n            filter: true,\n            resizable: true,\n            sortable: true,\n          }}\n          rowData={rowData}\n          // enable delta updates for redux\n          deltaRowDataMode={true}\n          getRowNodeId={(data) => data.instrumentName}\n          frameworkComponents={{\n            customNumberMinMaxFilter: MinMaxFilter,\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default OptionsScanner;\n","import React from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\nimport {actions} from \"../store/instruments\";\nimport {actions as tickers} from \"../store/tickers\";\nimport {subscriptionAdd, subscriptionRemove} from \"../services/deribit\";\n\nimport Component from \"../components/OptionsScanner\";\n\nconst OptionsScanner = ({currency}) => {\n  const dispatch = useDispatch();\n\n  const options = useSelector((state) => state.tickers.tickers);\n  const instruments = useSelector((state) => state.instruments.instruments);\n\n  React.useEffect(() => {\n    dispatch(actions.request(currency));\n  }, [currency, dispatch]);\n\n  React.useEffect(() => {\n    const channels = Object.keys(instruments)\n      .map((x) => `ticker.${x}.100ms`);\n    subscriptionAdd(channels, (d) => dispatch(tickers.update(d)));\n    return () => {\n      subscriptionRemove(channels);\n      dispatch(tickers.clear());\n    };\n  }, [instruments, dispatch]);\n\n  return <Component instruments={instruments} options={options}/>;\n};\n\nexport default OptionsScanner;\n","import React from \"react\";\nimport {useDispatch} from \"react-redux\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport {createMuiTheme, MuiThemeProvider} from \"@material-ui/core/styles\";\nimport {\n  Select,\n  MenuItem,\n  AppBar,\n  Grid,\n  IconButton,\n  Toolbar,\n  Tooltip,\n  Typography,\n} from \"@material-ui/core\";\n\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\n\nimport \"./App.css\";\nimport { Websocket } from \"./components/Websocket\";\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\nimport BrightnessHighIcon from \"@material-ui/icons/BrightnessHigh\";\nimport themes from \"./styles/themes\";\nimport {actions} from \"./store/websocket\";\nimport OptionsScanner from \"./containers/OptionsScanner\";\nfunction App() {\n  const dispatch = useDispatch();\n\n  const [isDarkTheme, setTheme] = React.useState(true);\n  const [network, setNetwork] = React.useState(\"www.deribit.com\");\n  const [currency, setCurrency] = React.useState(\"BTC\");\n\n  const url = `wss://${network}/ws/api/v2`;\n  const theme = createMuiTheme(\n    isDarkTheme ? themes.THEME_DARK : themes.THEME_LIGHT\n  );\n\n  React.useEffect(() => {\n    dispatch(actions.open(url));\n    return () => dispatch(actions.close());\n  }, [dispatch, url]);\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline/>\n      <AppBar position=\"static\" style={{padding: \"0px\"}}>\n        <Toolbar variant=\"dense\">\n          <Grid container alignItems=\"center\" justify=\"space-between\">\n            <Grid item xs={12} sm=\"auto\">\n              <Typography variant=\"h6\">Deribit Options Scanner</Typography>\n            </Grid>\n            <Grid item>\n              <Websocket/>\n            </Grid>\n            <Grid item>\n              <Select\n                value={currency}\n                onChange={(e) => setCurrency(e.target.value)}\n                style={{margin: \"0 8px\"}}\n              >\n                {[\"BTC\", \"ETH\"].map((c) => (\n                  <MenuItem key={c} value={c}>\n                    {c}\n                  </MenuItem>\n                ))}\n              </Select>\n              {/*<Select*/}\n              {/*  value={network}*/}\n              {/*  onChange={(e) => setNetwork(e.target.value)}*/}\n              {/*  style={{ margin: \"0 8px\" }}*/}\n              {/*>*/}\n              {/*  {[\"www.deribit.com\", \"test.deribit.com\"].map((url) => (*/}\n              {/*    <MenuItem key={url} value={url}>*/}\n              {/*      {url}*/}\n              {/*    </MenuItem>*/}\n              {/*  ))}*/}\n              {/*</Select>*/}\n              <Tooltip title=\"Toggle light/dark theme\">\n                <IconButton\n                  onClick={() => setTheme(!isDarkTheme)}\n                  aria-label=\"Toggle light/dark theme\"\n                >\n                  {isDarkTheme ? <BrightnessHighIcon/> : <Brightness4Icon/>}\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Github repository\">\n                <IconButton\n                  aria-label=\"Github repository\"\n                  href=\"https://github.com/thetaseek/options-scanner\"\n                  target=\"_blank\"\n                  rel=\"noreferrer noopener\"\n                >\n                  <GitHubIcon/>\n                </IconButton>\n              </Tooltip>\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n\n      <OptionsScanner url={url} currency={currency}/>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","import {configureStore, getDefaultMiddleware} from \"@reduxjs/toolkit\";\nimport instruments from \"./instruments\";\nimport tickers from \"./tickers\";\nimport websocket from \"./websocket\";\n\nexport default configureStore({\n  middleware: getDefaultMiddleware({\n    thunk: true,\n    immutableCheck: false,\n    serializableCheck: false,\n  }),\n  reducer: {\n    instruments,\n    tickers,\n    websocket,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === \"[::1]\" ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: {\"Service-Worker\": \"script\"},\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./store/store\";\nimport {Provider} from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}